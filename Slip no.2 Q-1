typedef struct node 
{
	int data;
	struct node *next;
	}node;
	node *create(node *list)
	{
	node *newnode,*temp;
	int i,n;
	printf("enter limit:");
	scanf("%d",&n);
	for(i=0;i<n;i++)
	{
	newnode=(node *)malloc(sizeof(node));
	printf("enter value:");
	scanf("%d",&newnode->data);
	newnode->next=NULL;
	if(list==NULL)
	{
	list=newnode;
	temp=newnode;
	}
	else
	{
	temp->next=newnode;
	temp=newnode;
	}
}
	return list;
	}
	void disp(node *list)
	{
	node *temp;
	for(temp=list;temp!=NULL;temp=temp->next)
	{
		printf("%d\t",temp->data);
	}
}



#include<stdio.h>
#include<stdlib.h>
#include"singlylist.h"
int main()
{
        node *list=NULL;
        int ch;
        do
        {
        printf("\n 1-create \n 2-disp:");
        printf("\n enter choice :");
        scanf("%d",&ch);
        switch(ch)
{
        case 1:list=create(list);
                break;
        case 2:disp(list);
                break;
        default:printf("linvalid choice :");
        }
}while(ch<3);
}








#include<stdio.h>
#include<stdlib.h>
#include"singlylist.h"
int main()
{
        node *list=NULL;
        int ch;
        do
        {
        printf("\n 1-create \n 2-disp:");
        printf("\n enter choice :");
        scanf("%d",&ch);
        switch(ch)
{
        case 1:list=create(list);
                break;
        case 2:disp(list);
                break;
        default:printf("linvalid choice :");
        }
}while(ch<3);
}
