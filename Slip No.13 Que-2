Q2. Write a program that sorts the elements of linked list using bubble sort
technique.

#include<stdio.h>
int main()
{
        int i,j,n,k,key,a[20],t;
        printf("enter limit:");
        scanf("%d",&n);
        for(i=0;i<n;i++)
        {
        printf("enter n numbers:");
        scanf("%d",&a[i]);
        }
        for(i=0;i<n;i++)
        {
        key=a[i];
        for(k=i-1;k>=0 && key<=a[k];k--)
        {
        t=a[k+1];
        a[k+1]=a[k];
        a[k]=t;
        }
        a[k+1]=key;
        }
        printf("\n Sorted list is:");
        for(i=0;i<n;i++)
        {
        printf("%d\t",a[i]);
        }
}


//// USING LINKED LIST//////


#include<stdio.h>
#include<stdlib.h>
struct node
{
        int data;
        struct node *next;
        };
        struct node * create(struct node *list)
        {
        int i,n;
        struct node *newnode,*temp;
        printf("enter limit:");
        scanf("%d",&n);
        for(i=0;i<n;i++)
        {
        newnode=(struct node *)malloc(sizeof(struct node));
        printf("enter value:");
        scanf("%d",&newnode->data);
        newnode->next==NULL;
        if(list==NULL)
        {
        list=newnode;
        temp=newnode;
        }
        else
        {
        temp->next=newnode;
        temp=newnode;
        }
        }
        return list;
        }

void disp(struct node * list)
        {
        struct node * temp;
        for(temp=list;temp!=NULL;temp=temp->next)
        {
        printf("%d\t",temp->data);
        }
}

        struct node * bubblesort(struct node *list)
        {
        struct node *i,*j;

        int t;
        for(i=list;i!=NULL;i=i->next)
{
        for(j=list;j!=i;j=j->next)
{
        if(i->data < j->data)
        {
        t=i->data;
        i->data=j->data;
        j->data=t;
}
        }
}
        return list;
}

int main()
        {
        int ch,num,pos,pass;
        struct node * list=NULL;
       do
       {
       printf("\n 1-create \n 2-disp \n 3-bubble");
       printf("\n enter choice:");
       scanf("%d",&ch);
       switch(ch)
       {
        case 1: list=create(list);
                        break;
        case 2:disp(list);
                break;
        case 3:list=bubblesort(list);
                disp(list);
                break;

}
        }while(ch<4);
}
