// QUE--Write a C program to evalute postfix expression


#include<stdio.h>
#include<string.h>
#include<ctype.h>
#define MAX 100
struct stack
{
        int a[MAX];
        int top;
}s,s1;
void init()
{
        s.top=-1;
}
int isempty()
{
        if(s.top==-1)
          return 1;
        else
          return 0;
}
int isfull()
{
        if(s.top==MAX-1)
          return 1;
        else
          return 0;
}
void push(int x)
{
        if(isfull())
          printf("stack is full don't push");
        else
          {
            s.top++;
            s.a[s.top]=x;
          }
}
char pop()
{
        int val;
          if(isempty())
            printf("stack is empty dont pop:");
          else
            {
             val=s.a[s.top];
              s.top--;
              return val;
            }
}
int main()
{
	char s1[100];
	int i,p,q,r,s,result,val1,val2;
	printf("enter postfix expression:");
	scanf("%s",&s1);
	printf("enter value of PQRS:");
	scanf("%d%d%d%d",&p,&q,&r,&s);
	init();
	for(i=0;s1[i]!='\0';i++)
	{
	 if(isalpha(s1[i]))
	  {
	   switch(s1[i])
	    {
	case 'P':push(p);break;
	case 'Q':push(q);break;
	case 'R':push(r);break;
	case 'S':push(s);break;
	    }
}
	else
	val1=pop();
	val2=pop();
	switch(s1[i])
	{
	case '+':result=val2+val1;break;
	case '-':result=val2-val1;break;
	case '*':result=val2*val1;break;
	case '/':result=val2/val1;break;
	}
	push(result);
	}
        {
	printf("\n result=%d",pop());
	}
}
